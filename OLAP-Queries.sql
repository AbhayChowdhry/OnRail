-- GROUP BY ROLLUP:

-- Query 1: Number of orders placed by each customer and the total number of orders
SELECT 
  CASE WHEN customer_name IS NULL THEN 'Total' ELSE customer_name END AS Customer, 
  COUNT(order_id) AS Orders_Placed
FROM 
  customers c
  LEFT JOIN order_payment op ON c.customer_id = op.customer_id
  GROUP BY 
  c.customer_name
  WITH ROLLUP;

-- Query 2: Sales Revenue for each Category with Total Revenue
SELECT c.category_name, SUM(op.order_value) AS total_sales
FROM order_payment op
JOIN order_items oi ON oi.order_id = op.order_id AND oi.customer_id = op.customer_id
JOIN product p ON p.product_id = oi.product_id
JOIN category c ON c.category_id = p.category_id
GROUP BY c.category_name WITH ROLLUP;

-- Query 3: Total Revenue Generated by each Category and Seller combination, and also the grand total revenue
SELECT c.category_name, s.seller_name, SUM(op.order_value) AS total_revenue
FROM order_payment op
JOIN order_items oi ON oi.order_id = op.order_id AND oi.customer_id = op.customer_id
JOIN product p ON p.product_id = oi.product_id
JOIN category c ON c.category_id = p.category_id
JOIN seller s ON s.seller_id = p.seller_id
GROUP BY c.category_name, s.seller_name WITH ROLLUP;

-- Query 4: Total number of orders completed by each delivery partner and total number of orders completed
SELECT 
    IFNULL(partner_name, 'Total') AS delivery_partner,
    COUNT(*) AS orders_completed
FROM 
    order_items oi
    INNER JOIN delivery_partner dp ON oi.partner_id = dp.partner_id
GROUP BY 
    partner_name WITH ROLLUP;

-- Query 5: Number of products in each category, and the total number of products
SELECT 
    IFNULL(category_name, 'Total') AS category,
    COUNT(*) AS products_in_category
FROM 
    product p
    INNER JOIN category c ON p.category_id = c.category_id
GROUP BY 
    category_name WITH ROLLUP;

-- GROUP BY CUBE:
-- Query 1: Total Sales Revenue for each Combination of Customer, Product, and Order Date, including subtotals for each customer and product, as well as a grand total
SELECT customer_id, product_id, order_date, SUM(order_value) as total_sales
FROM order_payment op
JOIN order_items oi ON op.order_id = oi.order_id AND op.customer_id = oi.customer_id
GROUP BY CUBE(customer_id, product_id, order_date)
ORDER BY customer_id, product_id, order_date;

-- Query 2: Total Sales Revenue for each Combination of Category, Delivery Partner, and Order Date, including subtotals for each category and delivery partner, as well as a grand tota
SELECT c.category_id, partner_id, order_date, SUM(order_value) as total_sales
FROM order_payment op
JOIN order_items oi ON op.order_id = oi.order_id AND op.customer_id = oi.customer_id
JOIN product p ON oi.product_id = p.product_id
JOIN category c ON p.category_id = c.category_id
GROUP BY CUBE(c.category_id, partner_id, order_date)
ORDER BY c.category_id, partner_id, order_date;

-- PIVOT Tables:
-- Query 1: The Total Revenue Generated from each Product for every Year
SELECT * FROM (
  SELECT YEAR(order_date) AS year, product_name, order_value
  FROM Order_Items
  JOIN Product ON Order_Items.product_id = Product.product_id
  JOIN Order_Payment ON Order_Items.order_id = Order_Payment.order_id AND Order_Items.customer_id = Order_Payment.customer_id
) AS p
PIVOT (
  SUM(order_value)
  FOR year IN ([2021], [2022])
) AS pvt;

-- Query 2: The total number of products sold by each customer and month-wise breakup for the year 2022
SELECT customer_id, 
    [1] AS Jan, [2] AS Feb, [3] AS Mar, [4] AS Apr, [5] AS May, [6] AS Jun, 
    [7] AS Jul, [8] AS Aug, [9] AS Sep, [10] AS Oct, [11] AS Nov, [12] AS Dec
FROM 
    (SELECT customer_id, MONTH(order_date) AS month, quantity_added 
     FROM order_items oi 
     JOIN order_payment op ON oi.order_id = op.order_id AND oi.customer_id = op.customer_id 
     WHERE YEAR(order_date) = 2022) AS src
PIVOT 
    (SUM(quantity_added) FOR month IN ([1], [2], [3], [4], [5], [6], [7], [8], [9], [10], [11], [12])) AS pvt
ORDER BY customer_id;
